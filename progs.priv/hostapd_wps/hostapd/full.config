# full.config -- hostapd build time configuration, all usual features
#
# This file lists the configuration options that are used when building the
# hostapd binary. All lines starting with # are ignored. Configuration option
# lines must be commented out complete, if they are not to be included, i.e.,
# just setting VARIABLE=n is not disabling that variable.
#
# This file is included in Makefile, so variables like CFLAGS and LIBS can also
# be modified from here. In most cass, these lines should use += in order not
# to override previous values of the variables.
#

include ../common/full.config
include ../../arch.mk
include ../../../path.mk
include ../../../.config

# Define this to enable all common enterprise protocols:
ifndef CONFIG_NO_ENTERPRISE
CONFIG_EAP_MD5=y

CONFIG_EAP_MSCHAPV2=y
CONFIG_EAP_TLS=y
CONFIG_EAP_PEAP=y
CONFIG_EAP_TTLS=y
#CONFIG_EAP_FAST=y
CONFIG_EAP_GTC=y
#CONFIG_EAP_OTP=y
#CONFIG_EAP_SIM=y
#CONFIG_EAP_PSK=y
#CONFIG_EAP_PAX=y
CONFIG_EAP_LEAP=y
endif # CONFIG_NO_ENTERPRISE

# Driver interface for Host AP driver
#CONFIG_DRIVER_HOSTAP=y

# Driver interface for wired authenticator
#CONFIG_DRIVER_WIRED=y

# Driver interface for madwifi driver
#ELBOX_PROGS_PRIV_MADWIFI_LSDK_WLAN_V9=y
ifeq ($(strip $(ELBOX_PROGS_PRIV_MADWIFI_LSDK_WLAN_V9)),y)
CONFIG_DRIVER_MADWIFI=y
CFLAGS += -DCONFIG_DRIVER_MADWIFI -DWPA_IE_CAPABILITIES_NOT_INCLUDED
CFLAGS += -I$(TOPDIR)/progs.priv/madwifi_LSDK-WLAN-9.x/_build/drivers/wlan/
LOCAL_SRCS += driver_madwifi.c
CONFIG_L2_PACKET:=y
endif

# Driver interface for realtek driver
ifeq ($(strip $(ELBOX_PROGS_PRIV_REALTEK_RT8198)),y)
CONFIG_DRIVER_REALTEK=y
CFLAGS += -DCONFIG_DRIVER_REALTEK
CFLAGS += -I./realtek
LOCAL_SRCS += driver_realtek.c
CONFIG_L2_PACKET:=y
endif

#_Eric
# Driver interface for broadcom driver
ifeq ($(strip $(ELBOX_PROGS_PRIV_BROADCOM_WIFI)),y)
CONFIG_DRIVER_BROADCOM:=y
CFLAGS += -DCONFIG_DRIVER_BROADCOM
ifdef ELBOX_BSP_KERNEL_PATH
CFLAGS += -I$(TOPDIR)/kernels/$(ELBOX_BSP_KERNEL_PATH)/../../include
else
CFLAGS += -I$(TOPDIR)/kernel/broadcom_rc/include
endif
LOCAL_SRCS += driver_broadcom.c
CONFIG_L2_PACKET:=y

#_Hendry
ifeq ($(strip $(ELBOX_BSP_BCM5358)),y)
CFLAGS += -DCONFIG_BSP_BCM5358
endif

endif

# Driver interface for RALINK driver
ifeq ($(strip $(ELBOX_PROGS_PRIV_AP_SYSLOG)),y)
CFLAGS  += -DAP_SYSLOG
ifdef ELBOX_PROGS_PRIV_LOGD_AP
CFLAGS += -DELBOX_PROGS_PRIV_LOGD_AP
endif
endif

ifeq ($(strip $(ELBOX_PROGS_PRIV_RALINK_RT3883_3662)),y)
CONFIG_DRIVER_RALINK:=y

CFLAGS += -DCONFIG_DRIVER_RALINK
CFLAGS += -DWPA_IE_CAPABILITIES_NOT_INCLUDED
CFLAGS += -I$(TOPDIR)/progs.priv/rt3883_3662/build/rt2860v2/os/linux
LOCAL_SRCS += driver_ralink.c
CONFIG_L2_PACKET:=y

ifeq ($(strip $(ELBOX_PROGS_PRIV_SUPPORT_AUTO_PROVISION)),y)
CFLAGS += -DSUPPORT_AUTO_PROVISION
endif

endif	

# Driver interface for RALINK driver (smart antenna)
ifeq ($(strip $(ELBOX_PROGS_PRIV_RALINK_RT3883_3662_SMART_ANTENNA)),y)
CONFIG_DRIVER_RALINK:=y
CFLAGS += -DCONFIG_DRIVER_RALINK
CFLAGS += -DWPA_IE_CAPABILITIES_NOT_INCLUDED
CFLAGS += -I$(TOPDIR)/progs.priv/ralink_driver/3662_smart_antenna/rt2860v2/os/linux/
LOCAL_SRCS += driver_ralink.c
CONFIG_L2_PACKET:=y

ifeq ($(strip $(ELBOX_PROGS_PRIV_SUPPORT_AUTO_PROVISION)),y)
CFLAGS += -DSUPPORT_AUTO_PROVISION
endif

endif

# Driver interface for RALINK driver (RT3352)
ifeq ($(strip $(ELBOX_PROGS_PRIV_RALINK_RT5592_V2700)),y)
CONFIG_DRIVER_RALINK:=y
CFLAGS += -DCONFIG_DRIVER_RALINK
CFLAGS += -DWPA_IE_CAPABILITIES_NOT_INCLUDED
CFLAGS += -I$(TOPDIR)/progs.priv/ralink_driver/RT5592_ap_v2700_Beta_dpa_20120410/os/linux/
LOCAL_SRCS += driver_ralink.c
CONFIG_L2_PACKET:=y
endif

# Driver interface for RALINK driver (RT3352)
ifeq ($(strip $(ELBOX_PROGS_PRIV_RALINK_RT3352_WIFI_DRIVER_2_5_0_4)),y)
CONFIG_DRIVER_RALINK:=y
CFLAGS += -DCONFIG_DRIVER_RALINK
CFLAGS += -DWPA_IE_CAPABILITIES_NOT_INCLUDED
CFLAGS += -I$(TOPDIR)/progs.priv/ralink_driver/3352_wifi_driver_2.5.0.4/rt2860v2/os/linux/
LOCAL_SRCS += driver_ralink.c
CONFIG_L2_PACKET:=y

#ifeq ($(strip $(ELBOX_PROGS_PRIV_SUPPORT_AUTO_PROVISION)),y)
#CFLAGS += -DSUPPORT_AUTO_PROVISION
#endif

endif

# Driver interface for RALINK driver (RT5350)
ifeq ($(strip $(ELBOX_PROGS_PRIV_RT2860V2_RT5350_RT3050_V2600_SINGLEIMAGE_OFFICIAL)),y)
CONFIG_DRIVER_RALINK:=y
CFLAGS += -DCONFIG_DRIVER_RALINK
CFLAGS += -DWPA_IE_CAPABILITIES_NOT_INCLUDED
CFLAGS += -I$(TOPDIR)/progs.priv/rt2860v2/build/rt2860v2/os/linux
LOCAL_SRCS += driver_ralink.c
CONFIG_L2_PACKET:=y
endif


# Driver interface for Prism54 driver
#CONFIG_DRIVER_PRISM54=y

# Driver interface for drivers using Devicescape IEEE 802.11 stack
#CONFIG_DRIVER_DEVICESCAPE=y
# Currently, driver_devicescape.c build requires some additional parameters
# to be able to include some of the kernel header files. Following lines can
# be used to set these (WIRELESS_DEV must point to the root directory of the
# wireless-dev.git tree).
#WIRELESS_DEV=/usr/src/wireless-dev
#CFLAGS += -I$(WIRELESS_DEV)/net/mac80211

# Driver interface for FreeBSD net80211 layer (e.g., Atheros driver)
#CONFIG_DRIVER_BSD=y
#CFLAGS += -I/usr/local/include
#LIBS += -L/usr/local/lib

# IEEE 802.11F/IAPP
CONFIG_IAPP=y

# WPA2/IEEE 802.11i RSN pre-authentication
CONFIG_RSN_PREAUTH=y

# IEEE 802.11w (management frame protection)
# This version is an experimental implementation based on IEEE 802.11w/D1.0
# draft and is subject to change since the standard has not yet been finalized.
# Driver support is also needed for IEEE 802.11w.
#CONFIG_IEEE80211W=y

# Integrated EAP server
CONFIG_EAP=y

# EAP-MD5 for the integrated EAP server
#CONFIG_EAP_MD5=y

# EAP-TLS for the integrated EAP server
#CONFIG_EAP_TLS=y

# EAP-MSCHAPv2 for the integrated EAP server
#CONFIG_EAP_MSCHAPV2=y

# EAP-PEAP for the integrated EAP server
#CONFIG_EAP_PEAP=y

# EAP-GTC for the integrated EAP server
#CONFIG_EAP_GTC=y

# EAP-TTLS for the integrated EAP server
#CONFIG_EAP_TTLS=y

# EAP-SIM for the integrated EAP server
#CONFIG_EAP_SIM=y

# EAP-AKA for the integrated EAP server
#CONFIG_EAP_AKA=y

# EAP-PAX for the integrated EAP server #CONFIG_EAP_PAX=y

# EAP-PSK for the integrated EAP server (this is _not_ needed for WPA-PSK)
#CONFIG_EAP_PSK=y

# EAP-SAKE for the integrated EAP server
#CONFIG_EAP_SAKE=y

# EAP-GPSK for the integrated EAP server
#CONFIG_EAP_GPSK=y
# Include support for optional SHA256 cipher suite in EAP-GPSK
#CONFIG_EAP_GPSK_SHA256=y

# PKCS#12 (PFX) support (used to read private key and certificate file from
# a file that usually has extension .p12 or .pfx)
#CONFIG_PKCS12=y

# RADIUS authentication server. This provides access to the integrated EAP
# server from external hosts using RADIUS.
#CONFIG_RADIUS_SERVER=y

# Build IPv6 support for RADIUS operations
#CONFIG_IPV6=y



